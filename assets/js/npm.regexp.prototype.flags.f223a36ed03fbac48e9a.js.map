{"version":3,"sources":["webpack:///./node_modules/regexp.prototype.flags/index.js","webpack:///./node_modules/regexp.prototype.flags/shim.js","webpack:///./node_modules/regexp.prototype.flags/polyfill.js","webpack:///./node_modules/regexp.prototype.flags/implementation.js"],"names":["define","__webpack_require__","implementation","getPolyfill","shim","flagsBound","Function","call","bind","module","exports","supportsDescriptors","gOPD","Object","getOwnPropertyDescriptor","defineProperty","TypeErr","TypeError","getProto","getPrototypeOf","regex","polyfill","proto","descriptor","get","configurable","enumerable","flags","RegExp","prototype","dotAll","toObject","this","result","global","ignoreCase","multiline","unicode","sticky"],"mappings":"8FAEA,IAAAA,EAAaC,EAAQ,QAErBC,EAAqBD,EAAQ,QAC7BE,EAAkBF,EAAQ,QAC1BG,EAAWH,EAAQ,QAEnBI,EAAAC,SAAAC,KAAAC,KAAAN,GAEAF,EAAAK,EAAA,CACAF,cACAD,iBACAE,SAGAK,EAAAC,QAAAL,qCCdA,IAAAM,EAA0BV,EAAQ,QAAmBU,oBACrDR,EAAkBF,EAAQ,QAC1BW,EAAAC,OAAAC,yBACAC,EAAAF,OAAAE,eACAC,EAAAC,UACAC,EAAAL,OAAAM,eACAC,EAAA,IAEAX,EAAAC,QAAA,WACA,IAAAC,IAAAO,EACA,UAAAF,EAAA,6FAEA,IAAAK,EAAAlB,IACAmB,EAAAJ,EAAAE,GACAG,EAAAX,EAAAU,EAAA,SAQA,OAPAC,KAAAC,MAAAH,GACAN,EAAAO,EAAA,SACAG,cAAA,EACAC,YAAA,EACAF,IAAAH,IAGAA,wCCtBA,IAAAnB,EAAqBD,EAAQ,QAE7BU,EAA0BV,EAAQ,QAAmBU,oBACrDC,EAAAC,OAAAC,yBACAE,EAAAC,UAEAR,EAAAC,QAAA,WACA,IAAAC,EACA,UAAAK,EAAA,6FAEA,kBAAAW,MAAA,CACA,IAAAJ,EAAAX,EAAAgB,OAAAC,UAAA,SACA,GAAAN,GAAA,mBAAAA,EAAAC,KAAA,qBAAAM,OACA,OAAAP,EAAAC,IAGA,OAAAtB,sCChBA,IAAA6B,EAAAlB,OACAG,EAAAC,UAEAR,EAAAC,QAAA,WACA,SAAAsB,aAAAD,EAAAC,MACA,UAAAhB,EAAA,sDAEA,IAAAiB,EAAA,GAmBA,OAlBAD,KAAAE,SACAD,GAAA,KAEAD,KAAAG,aACAF,GAAA,KAEAD,KAAAI,YACAH,GAAA,KAEAD,KAAAF,SACAG,GAAA,KAEAD,KAAAK,UACAJ,GAAA,KAEAD,KAAAM,SACAL,GAAA,KAEAA","file":"assets/js/npm.regexp.prototype.flags.f223a36ed03fbac48e9a.js","sourcesContent":["'use strict';\n\nvar define = require('define-properties');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar flagsBound = Function.call.bind(implementation);\n\ndefine(flagsBound, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = flagsBound;\n","'use strict';\n\nvar supportsDescriptors = require('define-properties').supportsDescriptors;\nvar getPolyfill = require('./polyfill');\nvar gOPD = Object.getOwnPropertyDescriptor;\nvar defineProperty = Object.defineProperty;\nvar TypeErr = TypeError;\nvar getProto = Object.getPrototypeOf;\nvar regex = /a/;\n\nmodule.exports = function shimFlags() {\n\tif (!supportsDescriptors || !getProto) {\n\t\tthrow new TypeErr('RegExp.prototype.flags requires a true ES5 environment that supports property descriptors');\n\t}\n\tvar polyfill = getPolyfill();\n\tvar proto = getProto(regex);\n\tvar descriptor = gOPD(proto, 'flags');\n\tif (!descriptor || descriptor.get !== polyfill) {\n\t\tdefineProperty(proto, 'flags', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tget: polyfill\n\t\t});\n\t}\n\treturn polyfill;\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nvar supportsDescriptors = require('define-properties').supportsDescriptors;\nvar gOPD = Object.getOwnPropertyDescriptor;\nvar TypeErr = TypeError;\n\nmodule.exports = function getPolyfill() {\n\tif (!supportsDescriptors) {\n\t\tthrow new TypeErr('RegExp.prototype.flags requires a true ES5 environment that supports property descriptors');\n\t}\n\tif (/a/mig.flags === 'gim') {\n\t\tvar descriptor = gOPD(RegExp.prototype, 'flags');\n\t\tif (descriptor && typeof descriptor.get === 'function' && typeof (/a/).dotAll === 'boolean') {\n\t\t\treturn descriptor.get;\n\t\t}\n\t}\n\treturn implementation;\n};\n","'use strict';\n\nvar toObject = Object;\nvar TypeErr = TypeError;\n\nmodule.exports = function flags() {\n\tif (this != null && this !== toObject(this)) {\n\t\tthrow new TypeErr('RegExp.prototype.flags getter called on non-object');\n\t}\n\tvar result = '';\n\tif (this.global) {\n\t\tresult += 'g';\n\t}\n\tif (this.ignoreCase) {\n\t\tresult += 'i';\n\t}\n\tif (this.multiline) {\n\t\tresult += 'm';\n\t}\n\tif (this.dotAll) {\n\t\tresult += 's';\n\t}\n\tif (this.unicode) {\n\t\tresult += 'u';\n\t}\n\tif (this.sticky) {\n\t\tresult += 'y';\n\t}\n\treturn result;\n};\n"],"sourceRoot":""}