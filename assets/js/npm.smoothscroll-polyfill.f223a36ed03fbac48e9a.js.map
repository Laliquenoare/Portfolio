{"version":3,"sources":["webpack:///./node_modules/smoothscroll-polyfill/dist/smoothscroll.js"],"names":["w","d","undefined","module","exports","polyfill","documentElement","style","Element","HTMLElement","SCROLL_TIME","original","scroll","scrollTo","scrollBy","elScroll","prototype","scrollElement","scrollIntoView","now","performance","bind","Date","shouldBailOut","arguments","call","left","top","smoothScroll","body","scrollX","pageXOffset","scrollY","pageYOffset","this","scrollLeft","scrollTop","arg0","behavior","scrollableParent","el","isBody","hasScrollableSpace","hasVisibleOverflow","parentNode","clientHeight","scrollHeight","clientWidth","scrollWidth","getComputedStyle","overflow","findScrollableParent","parentRects","getBoundingClientRect","clientRects","x","y","TypeError","step","context","value","currentX","currentY","k","elapsed","startTime","Math","cos","PI","startX","startY","method","scrollable","requestAnimationFrame","window","document"],"mappings":"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","file":"assets/js/npm.smoothscroll-polyfill.f223a36ed03fbac48e9a.js","sourcesContent":["/*\n * smoothscroll polyfill - v0.3.5\n * https://iamdustan.github.io/smoothscroll\n * 2016 (c) Dustan Kasten, Jeremias Menichelli - MIT License\n */\n\n(function(w, d, undefined) {\n  'use strict';\n\n  /*\n   * aliases\n   * w: window global object\n   * d: document\n   * undefined: undefined\n   */\n\n  // polyfill\n  function polyfill() {\n    // return when scrollBehavior interface is supported\n    if ('scrollBehavior' in d.documentElement.style) {\n      return;\n    }\n\n    /*\n     * globals\n     */\n    var Element = w.HTMLElement || w.Element;\n    var SCROLL_TIME = 468;\n\n    /*\n     * object gathering original scroll methods\n     */\n    var original = {\n      scroll: w.scroll || w.scrollTo,\n      scrollBy: w.scrollBy,\n      elScroll: Element.prototype.scroll || scrollElement,\n      scrollIntoView: Element.prototype.scrollIntoView\n    };\n\n    /*\n     * define timing method\n     */\n    var now = w.performance && w.performance.now\n      ? w.performance.now.bind(w.performance) : Date.now;\n\n    /**\n     * changes scroll position inside an element\n     * @method scrollElement\n     * @param {Number} x\n     * @param {Number} y\n     */\n    function scrollElement(x, y) {\n      this.scrollLeft = x;\n      this.scrollTop = y;\n    }\n\n    /**\n     * returns result of applying ease math function to a number\n     * @method ease\n     * @param {Number} k\n     * @returns {Number}\n     */\n    function ease(k) {\n      return 0.5 * (1 - Math.cos(Math.PI * k));\n    }\n\n    /**\n     * indicates if a smooth behavior should be applied\n     * @method shouldBailOut\n     * @param {Number|Object} x\n     * @returns {Boolean}\n     */\n    function shouldBailOut(x) {\n      if (typeof x !== 'object'\n            || x === null\n            || x.behavior === undefined\n            || x.behavior === 'auto'\n            || x.behavior === 'instant') {\n        // first arg not an object/null\n        // or behavior is auto, instant or undefined\n        return true;\n      }\n\n      if (typeof x === 'object'\n            && x.behavior === 'smooth') {\n        // first argument is an object and behavior is smooth\n        return false;\n      }\n\n      // throw error when behavior is not supported\n      throw new TypeError('behavior not valid');\n    }\n\n    /**\n     * finds scrollable parent of an element\n     * @method findScrollableParent\n     * @param {Node} el\n     * @returns {Node} el\n     */\n    function findScrollableParent(el) {\n      var isBody;\n      var hasScrollableSpace;\n      var hasVisibleOverflow;\n\n      do {\n        el = el.parentNode;\n\n        // set condition variables\n        isBody = el === d.body;\n        hasScrollableSpace =\n          el.clientHeight < el.scrollHeight ||\n          el.clientWidth < el.scrollWidth;\n        hasVisibleOverflow =\n          w.getComputedStyle(el, null).overflow === 'visible';\n      } while (!isBody && !(hasScrollableSpace && !hasVisibleOverflow));\n\n      isBody = hasScrollableSpace = hasVisibleOverflow = null;\n\n      return el;\n    }\n\n    /**\n     * self invoked function that, given a context, steps through scrolling\n     * @method step\n     * @param {Object} context\n     */\n    function step(context) {\n      var time = now();\n      var value;\n      var currentX;\n      var currentY;\n      var elapsed = (time - context.startTime) / SCROLL_TIME;\n\n      // avoid elapsed times higher than one\n      elapsed = elapsed > 1 ? 1 : elapsed;\n\n      // apply easing to elapsed time\n      value = ease(elapsed);\n\n      currentX = context.startX + (context.x - context.startX) * value;\n      currentY = context.startY + (context.y - context.startY) * value;\n\n      context.method.call(context.scrollable, currentX, currentY);\n\n      // scroll more if we have not reached our destination\n      if (currentX !== context.x || currentY !== context.y) {\n        w.requestAnimationFrame(step.bind(w, context));\n      }\n    }\n\n    /**\n     * scrolls window with a smooth behavior\n     * @method smoothScroll\n     * @param {Object|Node} el\n     * @param {Number} x\n     * @param {Number} y\n     */\n    function smoothScroll(el, x, y) {\n      var scrollable;\n      var startX;\n      var startY;\n      var method;\n      var startTime = now();\n\n      // define scroll context\n      if (el === d.body) {\n        scrollable = w;\n        startX = w.scrollX || w.pageXOffset;\n        startY = w.scrollY || w.pageYOffset;\n        method = original.scroll;\n      } else {\n        scrollable = el;\n        startX = el.scrollLeft;\n        startY = el.scrollTop;\n        method = scrollElement;\n      }\n\n      // scroll looping over a frame\n      step({\n        scrollable: scrollable,\n        method: method,\n        startTime: startTime,\n        startX: startX,\n        startY: startY,\n        x: x,\n        y: y\n      });\n    }\n\n    /*\n     * ORIGINAL METHODS OVERRIDES\n     */\n\n    // w.scroll and w.scrollTo\n    w.scroll = w.scrollTo = function() {\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0])) {\n        original.scroll.call(\n          w,\n          arguments[0].left || arguments[0],\n          arguments[0].top || arguments[1]\n        );\n        return;\n      }\n\n      // LET THE SMOOTHNESS BEGIN!\n      smoothScroll.call(\n        w,\n        d.body,\n        ~~arguments[0].left,\n        ~~arguments[0].top\n      );\n    };\n\n    // w.scrollBy\n    w.scrollBy = function() {\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0])) {\n        original.scrollBy.call(\n          w,\n          arguments[0].left || arguments[0],\n          arguments[0].top || arguments[1]\n        );\n        return;\n      }\n\n      // LET THE SMOOTHNESS BEGIN!\n      smoothScroll.call(\n        w,\n        d.body,\n        ~~arguments[0].left + (w.scrollX || w.pageXOffset),\n        ~~arguments[0].top + (w.scrollY || w.pageYOffset)\n      );\n    };\n\n    // Element.prototype.scroll and Element.prototype.scrollTo\n    Element.prototype.scroll = Element.prototype.scrollTo = function() {\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0])) {\n        original.elScroll.call(\n            this,\n            arguments[0].left || arguments[0],\n            arguments[0].top || arguments[1]\n        );\n        return;\n      }\n\n      var left = arguments[0].left;\n      var top = arguments[0].top;\n\n      // LET THE SMOOTHNESS BEGIN!\n      smoothScroll.call(\n          this,\n          this,\n          typeof left === 'number' ? left : this.scrollLeft,\n          typeof top === 'number' ? top : this.scrollTop\n      );\n    };\n\n    // Element.prototype.scrollBy\n    Element.prototype.scrollBy = function() {\n      var arg0 = arguments[0];\n\n      if (typeof arg0 === 'object') {\n        this.scroll({\n          left: arg0.left + this.scrollLeft,\n          top: arg0.top + this.scrollTop,\n          behavior: arg0.behavior\n        });\n      } else {\n        this.scroll(\n          this.scrollLeft + arg0,\n          this.scrollTop + arguments[1]\n        );\n      }\n    };\n\n    // Element.prototype.scrollIntoView\n    Element.prototype.scrollIntoView = function() {\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0])) {\n        original.scrollIntoView.call(\n          this,\n          arguments[0] === undefined ? true : arguments[0]\n        );\n        return;\n      }\n\n      // LET THE SMOOTHNESS BEGIN!\n      var scrollableParent = findScrollableParent(this);\n      var parentRects = scrollableParent.getBoundingClientRect();\n      var clientRects = this.getBoundingClientRect();\n\n      if (scrollableParent !== d.body) {\n        // reveal element inside parent\n        smoothScroll.call(\n          this,\n          scrollableParent,\n          scrollableParent.scrollLeft + clientRects.left - parentRects.left,\n          scrollableParent.scrollTop + clientRects.top - parentRects.top\n        );\n        // reveal parent in viewport\n        w.scrollBy({\n          left: parentRects.left,\n          top: parentRects.top,\n          behavior: 'smooth'\n        });\n      } else {\n        // reveal element in viewport\n        w.scrollBy({\n          left: clientRects.left,\n          top: clientRects.top,\n          behavior: 'smooth'\n        });\n      }\n    };\n  }\n\n  if (typeof exports === 'object') {\n    // commonjs\n    module.exports = { polyfill: polyfill };\n  } else {\n    // global\n    polyfill();\n  }\n})(window, document);\n"],"sourceRoot":""}