{"version":3,"sources":["webpack:///./node_modules/matchmedia-polyfill/matchMedia.addListener.js","webpack:///./node_modules/matchmedia-polyfill/matchMedia.js"],"names":["window","matchMedia","addListener","localMatchMedia","hasMediaQueries","matches","isListening","timeoutID","queries","handleChange","evt","clearTimeout","setTimeout","i","il","length","mql","listeners","media","j","jl","call","index","listener","addEventListener","push","removeListener","splice","styleMedia","info","style","document","createElement","script","getElementsByTagName","type","id","parentNode","insertBefore","head","appendChild","getComputedStyle","currentStyle","matchMedium","text","styleSheet","cssText","textContent","width"],"mappings":"gFACA,WAEA,GAAAA,OAAAC,YAAAD,OAAAC,WAAA,OAAAC,YACA,SAGA,IAAAC,EAAAH,OAAAC,WACAG,EAAAD,EAAA,YAAAE,QACAC,GAAA,EACAC,EAAA,EACAC,EAAA,GACAC,EAAA,SAAAC,GAEAC,aAAAJ,GAEAA,EAAAK,WAAA,WACA,QAAAC,EAAA,EAAAC,EAAAN,EAAAO,OAAoDF,EAAAC,EAAQD,IAAA,CAC5D,IAAAG,EAAAR,EAAAK,GAAAG,IACAC,EAAAT,EAAAK,GAAAI,WAAA,GACAZ,EAAAF,EAAAa,EAAAE,OAAAb,QAIA,GAAAA,IAAAW,EAAAX,QAAA,CACAW,EAAAX,UAEA,QAAAc,EAAA,EAAAC,EAAAH,EAAAF,OAA8DI,EAAAC,EAAQD,IACtEF,EAAAE,GAAAE,KAAArB,OAAAgB,MAIa,KAGbhB,OAAAC,WAAA,SAAAiB,GACA,IAAAF,EAAAb,EAAAe,GACAD,EAAA,GACAK,EAAA,EAkCA,OAhCAN,EAAAd,YAAA,SAAAqB,GAEAnB,IAMAE,IACAA,GAAA,EACAN,OAAAwB,iBAAA,SAAAf,GAAA,IAIA,IAAAa,IACAA,EAAAd,EAAAiB,KAAA,CACAT,MACAC,eAIAA,EAAAQ,KAAAF,KAGAP,EAAAU,eAAA,SAAAH,GACA,QAAAV,EAAA,EAAAC,EAAAG,EAAAF,OAAkDF,EAAAC,EAAQD,IAC1DI,EAAAJ,KAAAU,GACAN,EAAAU,OAAAd,EAAA,IAKAG,GAvEA,yBCCAhB,OAAAC,aAAAD,OAAAC,WAAA,WACA,aAGA,IAAA2B,EAAA5B,OAAA4B,YAAA5B,OAAAkB,MAGA,IAAAU,EAAA,CACA,IAEAC,EAFAC,EAAAC,SAAAC,cAAA,SACAC,EAAAF,SAAAG,qBAAA,aAGAJ,EAAAK,KAAA,WACAL,EAAAM,GAAA,oBAEAH,EAGAA,EAAAI,WAAAC,aAAAR,EAAAG,GAFAF,SAAAQ,KAAAC,YAAAV,GAMAD,EAAA,qBAAA7B,eAAAyC,iBAAAX,EAAA,OAAAA,EAAAY,aAEAd,EAAA,CACAe,YAAA,SAAAzB,GACA,IAAA0B,EAAA,UAAA1B,EAAA,yCAUA,OAPAY,EAAAe,WACAf,EAAAe,WAAAC,QAAAF,EAEAd,EAAAiB,YAAAH,EAIA,QAAAf,EAAAmB,QAKA,gBAAA9B,GACA,OACAb,QAAAuB,EAAAe,YAAAzB,GAAA,OACAA,SAAA,QA5CA","file":"assets/js/npm.matchmedia-polyfill.f223a36ed03fbac48e9a.js","sourcesContent":["/*! matchMedia() polyfill addListener/removeListener extension. Author & copyright (c) 2012: Scott Jehl. MIT license */\n(function(){\n    // Bail out for browsers that have addListener support\n    if (window.matchMedia && window.matchMedia('all').addListener) {\n        return false;\n    }\n\n    var localMatchMedia = window.matchMedia,\n        hasMediaQueries = localMatchMedia('only all').matches,\n        isListening     = false,\n        timeoutID       = 0,    // setTimeout for debouncing 'handleChange'\n        queries         = [],   // Contains each 'mql' and associated 'listeners' if 'addListener' is used\n        handleChange    = function(evt) {\n            // Debounce\n            clearTimeout(timeoutID);\n\n            timeoutID = setTimeout(function() {\n                for (var i = 0, il = queries.length; i < il; i++) {\n                    var mql         = queries[i].mql,\n                        listeners   = queries[i].listeners || [],\n                        matches     = localMatchMedia(mql.media).matches;\n\n                    // Update mql.matches value and call listeners\n                    // Fire listeners only if transitioning to or from matched state\n                    if (matches !== mql.matches) {\n                        mql.matches = matches;\n\n                        for (var j = 0, jl = listeners.length; j < jl; j++) {\n                            listeners[j].call(window, mql);\n                        }\n                    }\n                }\n            }, 30);\n        };\n\n    window.matchMedia = function(media) {\n        var mql         = localMatchMedia(media),\n            listeners   = [],\n            index       = 0;\n\n        mql.addListener = function(listener) {\n            // Changes would not occur to css media type so return now (Affects IE <= 8)\n            if (!hasMediaQueries) {\n                return;\n            }\n\n            // Set up 'resize' listener for browsers that support CSS3 media queries (Not for IE <= 8)\n            // There should only ever be 1 resize listener running for performance\n            if (!isListening) {\n                isListening = true;\n                window.addEventListener('resize', handleChange, true);\n            }\n\n            // Push object only if it has not been pushed already\n            if (index === 0) {\n                index = queries.push({\n                    mql         : mql,\n                    listeners   : listeners\n                });\n            }\n\n            listeners.push(listener);\n        };\n\n        mql.removeListener = function(listener) {\n            for (var i = 0, il = listeners.length; i < il; i++){\n                if (listeners[i] === listener){\n                    listeners.splice(i, 1);\n                }\n            }\n        };\n\n        return mql;\n    };\n}());\n","/*! matchMedia() polyfill - Test a CSS media type/query in JS. Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas, David Knight. MIT license */\n\nwindow.matchMedia || (window.matchMedia = function() {\n    \"use strict\";\n\n    // For browsers that support matchMedium api such as IE 9 and webkit\n    var styleMedia = (window.styleMedia || window.media);\n\n    // For those that don't support matchMedium\n    if (!styleMedia) {\n        var style       = document.createElement('style'),\n            script      = document.getElementsByTagName('script')[0],\n            info        = null;\n\n        style.type  = 'text/css';\n        style.id    = 'matchmediajs-test';\n\n        if (!script) {\n          document.head.appendChild(style);\n        } else {\n          script.parentNode.insertBefore(style, script);\n        }\n\n        // 'style.currentStyle' is used by IE <= 8 and 'window.getComputedStyle' for all other browsers\n        info = ('getComputedStyle' in window) && window.getComputedStyle(style, null) || style.currentStyle;\n\n        styleMedia = {\n            matchMedium: function(media) {\n                var text = '@media ' + media + '{ #matchmediajs-test { width: 1px; } }';\n\n                // 'style.styleSheet' is used by IE <= 8 and 'style.textContent' for all other browsers\n                if (style.styleSheet) {\n                    style.styleSheet.cssText = text;\n                } else {\n                    style.textContent = text;\n                }\n\n                // Test if media query is true or false\n                return info.width === '1px';\n            }\n        };\n    }\n\n    return function(media) {\n        return {\n            matches: styleMedia.matchMedium(media || 'all'),\n            media: media || 'all'\n        };\n    };\n}());\n"],"sourceRoot":""}