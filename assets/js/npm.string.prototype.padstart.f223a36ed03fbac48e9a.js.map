{"version":3,"sources":["webpack:///./node_modules/string.prototype.padstart/implementation.js","webpack:///./node_modules/string.prototype.padstart/shim.js","webpack:///./node_modules/string.prototype.padstart/polyfill.js"],"names":["bind","__webpack_require__","ES","slice","call","Function","String","prototype","module","exports","maxLength","fillString","O","RequireObjectCoercible","this","S","ToString","stringLength","ToLength","length","arguments","filler","intMaxLength","fillLen","fLen","remainingCodeUnits","getPolyfill","define","polyfill","padStart","implementation"],"mappings":"4FAEA,IAAAA,EAAWC,EAAQ,QACnBC,EAASD,EAAQ,QACjBE,EAAAH,EAAAI,KAAAC,SAAAD,KAAAE,OAAAC,UAAAJ,OAEAK,EAAAC,QAAA,SAAAC,GACA,IAGAC,EAHAC,EAAAV,EAAAW,uBAAAC,MACAC,EAAAb,EAAAc,SAAAJ,GACAK,EAAAf,EAAAgB,SAAAH,EAAAI,QAEAC,UAAAD,OAAA,IACAR,EAAAS,UAAA,IAEA,IAAAC,OAAA,IAAAV,EAAA,GAAAT,EAAAc,SAAAL,GACA,KAAAU,IACAA,EAAA,KAEA,IAAAC,EAAApB,EAAAgB,SAAAR,GACA,GAAAY,GAAAL,EACA,OAAAF,EAGA,IADA,IAAAQ,EAAAD,EAAAL,EACAI,EAAAF,OAAAI,GAAA,CACA,IAAAC,EAAAH,EAAAF,OACAM,EAAAF,EAAAC,EACAH,GAAAG,EAAAC,EAAAtB,EAAAkB,EAAA,EAAAI,GAAAJ,EAIA,OADAA,EAAAF,OAAAI,EAAApB,EAAAkB,EAAA,EAAAE,GAAAF,GACAN,sCC5BA,IAAAW,EAAkBzB,EAAQ,QAC1B0B,EAAa1B,EAAQ,QAErBO,EAAAC,QAAA,WACA,IAAAmB,EAAAF,IAEA,OADAC,EAAArB,OAAAC,UAAA,CAA2BsB,SAAAD,GAAqB,CAAGC,SAAA,WAAwB,OAAAvB,OAAAC,UAAAsB,WAAAD,KAC3EA,wCCNA,IAAAE,EAAqB7B,EAAQ,QAE7BO,EAAAC,QAAA,WACA,yBAAAH,OAAAC,UAAAsB,SAAAvB,OAAAC,UAAAsB,SAAAC","file":"assets/js/npm.string.prototype.padstart.f223a36ed03fbac48e9a.js","sourcesContent":["'use strict';\n\nvar bind = require('function-bind');\nvar ES = require('es-abstract/es7');\nvar slice = bind.call(Function.call, String.prototype.slice);\n\nmodule.exports = function padStart(maxLength) {\n\tvar O = ES.RequireObjectCoercible(this);\n\tvar S = ES.ToString(O);\n\tvar stringLength = ES.ToLength(S.length);\n\tvar fillString;\n\tif (arguments.length > 1) {\n\t\tfillString = arguments[1];\n\t}\n\tvar filler = typeof fillString === 'undefined' ? '' : ES.ToString(fillString);\n\tif (filler === '') {\n\t\tfiller = ' ';\n\t}\n\tvar intMaxLength = ES.ToLength(maxLength);\n\tif (intMaxLength <= stringLength) {\n\t\treturn S;\n\t}\n\tvar fillLen = intMaxLength - stringLength;\n\twhile (filler.length < fillLen) {\n\t\tvar fLen = filler.length;\n\t\tvar remainingCodeUnits = fillLen - fLen;\n\t\tfiller += fLen > remainingCodeUnits ? slice(filler, 0, remainingCodeUnits) : filler;\n\t}\n\n\tvar truncatedStringFiller = filler.length > fillLen ? slice(filler, 0, fillLen) : filler;\n\treturn truncatedStringFiller + S;\n};\n","'use strict';\n\nvar getPolyfill = require('./polyfill');\nvar define = require('define-properties');\n\nmodule.exports = function shimPadStart() {\n\tvar polyfill = getPolyfill();\n\tdefine(String.prototype, { padStart: polyfill }, { padStart: function () { return String.prototype.padStart !== polyfill; } });\n\treturn polyfill;\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\treturn typeof String.prototype.padStart === 'function' ? String.prototype.padStart : implementation;\n};\n"],"sourceRoot":""}